const beacon = @import("bof_api").beacon;
const w32 = @import("bof_api").win32;
const bof_launcher = @import("bof_launcher_api");

fn runBof1(bof_bytes: []const u8) !void {
    const bof_exit_code = try bof_launcher.run(bof_bytes);
    _ = beacon.printf.?(0, "[1] Child BOF exit code: %d\n", bof_exit_code);
}

fn runBof2(bof_bytes: []const u8) !void {
    const bof_object = try bof_launcher.Object.initFromMemory(bof_bytes);
    defer bof_object.release();

    const bof_context = try bof_object.run(null);
    defer bof_context.release();

    _ = beacon.printf.?(0, "[2] Child BOF exit code: %d\n", bof_context.getExitCode());
    if (bof_context.getOutput()) |output| {
        _ = beacon.printf.?(0, "[2] Child BOF output: \n%s", output.ptr);
    }
}

pub export fn go(_: ?[*]u8, _: i32) callconv(.C) u8 {
    const bof_bytes = if (@import("builtin").cpu.arch == .x86) bof_coff_x86 else bof_coff_x64;

    runBof1(&bof_bytes) catch return 1;
    runBof2(&bof_bytes) catch return 2;

    return 0;
}

// helloBof.coff.x86.o
const bof_coff_x86 = [512]u8{
    76,  1,   4,   0,   0,   0,   0,   0,   230, 0,   0,   0,   14,  0,   0,   0,
    0,   0,   0,   0,   46,  116, 101, 120, 116, 0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   17,  0,   0,   0,   180, 0,   0,   0,   197, 0,   0,   0,
    0,   0,   0,   0,   2,   0,   0,   0,   32,  0,   48,  96,  46,  100, 97,  116,
    97,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    217, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    64,  0,   48,  192, 46,  98,  115, 115, 0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   128, 0,   48,  192, 46,  114, 100, 97,
    116, 97,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   13,  0,   0,   0,
    217, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    64,  0,   16,  64,  104, 0,   0,   0,   0,   106, 0,   232, 0,   0,   0,   0,
    89,  90,  176, 123, 195, 1,   0,   0,   0,   10,  0,   0,   0,   6,   0,   8,
    0,   0,   0,   11,  0,   0,   0,   20,  0,   104, 101, 108, 108, 111, 44,  32,
    98,  111, 102, 33,  10,  0,   46,  116, 101, 120, 116, 0,   0,   0,   0,   0,
    0,   0,   1,   0,   0,   0,   3,   1,   17,  0,   0,   0,   2,   0,   0,   0,
    39,  94,  238, 233, 1,   0,   0,   0,   0,   0,   46,  100, 97,  116, 97,  0,
    0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   3,   1,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   0,   0,   0,   0,   46,  98,
    115, 115, 0,   0,   0,   0,   0,   0,   0,   0,   3,   0,   0,   0,   3,   1,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,   0,   0,   0,
    0,   0,   46,  114, 100, 97,  116, 97,  0,   0,   0,   0,   0,   0,   4,   0,
    0,   0,   3,   1,   13,  0,   0,   0,   0,   0,   0,   0,   149, 208, 217, 20,
    4,   0,   0,   0,   0,   0,   64,  102, 101, 97,  116, 46,  48,  48,  1,   0,
    0,   0,   255, 255, 0,   0,   3,   0,   95,  103, 111, 0,   0,   0,   0,   0,
    0,   0,   0,   0,   1,   0,   32,  0,   2,   0,   0,   0,   0,   0,   18,  0,
    0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   3,   0,   0,   0,   0,   0,
    4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2,   0,   46,  102,
    105, 108, 101, 0,   0,   0,   0,   0,   0,   0,   254, 255, 0,   0,   103, 1,
    104, 101, 108, 108, 111, 66,  111, 102, 0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   30,  0,   0,   0,   95,  66,  101, 97,  99,  111, 110, 80,  114, 105,
    110, 116, 102, 0,   95,  95,  95,  97,  110, 111, 110, 95,  57,  54,  55,  0,
};

// helloBof.coff.x64.o
const bof_coff_x64 = [518]u8{
    100, 134, 4,   0,   0,   0,   0,   0,   238, 0,   0,   0,   14,  0,   0,   0,
    0,   0,   0,   0,   46,  116, 101, 120, 116, 0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   25,  0,   0,   0,   180, 0,   0,   0,   205, 0,   0,   0,
    0,   0,   0,   0,   2,   0,   0,   0,   32,  0,   48,  96,  46,  100, 97,  116,
    97,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    225, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    64,  0,   48,  192, 46,  98,  115, 115, 0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   0,   0,   0,   0,   128, 0,   48,  192, 46,  114, 100, 97,
    116, 97,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   13,  0,   0,   0,
    225, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    64,  0,   16,  64,  72,  131, 236, 40,  72,  141, 21,  0,   0,   0,   0,   49,
    201, 232, 0,   0,   0,   0,   176, 123, 72,  131, 196, 40,  195, 7,   0,   0,
    0,   10,  0,   0,   0,   4,   0,   14,  0,   0,   0,   11,  0,   0,   0,   4,
    0,   104, 101, 108, 108, 111, 44,  32,  98,  111, 102, 33,  10,  0,   46,  116,
    101, 120, 116, 0,   0,   0,   0,   0,   0,   0,   1,   0,   0,   0,   3,   1,
    25,  0,   0,   0,   2,   0,   0,   0,   71,  68,  35,  99,  1,   0,   0,   0,
    0,   0,   46,  100, 97,  116, 97,  0,   0,   0,   0,   0,   0,   0,   2,   0,
    0,   0,   3,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
    2,   0,   0,   0,   0,   0,   46,  98,  115, 115, 0,   0,   0,   0,   0,   0,
    0,   0,   3,   0,   0,   0,   3,   1,   0,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   3,   0,   0,   0,   0,   0,   46,  114, 100, 97,  116, 97,
    0,   0,   0,   0,   0,   0,   4,   0,   0,   0,   3,   1,   13,  0,   0,   0,
    0,   0,   0,   0,   149, 208, 217, 20,  4,   0,   0,   0,   0,   0,   64,  102,
    101, 97,  116, 46,  48,  48,  0,   0,   0,   0,   255, 255, 0,   0,   3,   0,
    103, 111, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   0,   32,  0,
    2,   0,   0,   0,   0,   0,   17,  0,   0,   0,   0,   0,   0,   0,   4,   0,
    0,   0,   3,   0,   0,   0,   0,   0,   4,   0,   0,   0,   0,   0,   0,   0,
    0,   0,   0,   0,   2,   0,   46,  102, 105, 108, 101, 0,   0,   0,   0,   0,
    0,   0,   254, 255, 0,   0,   103, 1,   104, 101, 108, 108, 111, 66,  111, 102,
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   28,  0,   0,   0,   66,  101,
    97,  99,  111, 110, 80,  114, 105, 110, 116, 102, 0,   95,  95,  97,  110, 111,
    110, 95,  57,  57,  53,  0,
};
